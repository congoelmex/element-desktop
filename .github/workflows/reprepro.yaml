on:
    workflow_call:
        inputs:
            artifact-name:
                type: string
                required: true
                description: "The name of the artifact containing the debs to include"
        secrets:
            GPG_PRIVATE_KEY:
                required: false
            GPG_PASSPHRASE:
                required: false
            CF_R2_ACCESS_KEY_ID:
                required: false
            CF_R2_TOKEN:
                required: false
            CF_R2_S3_API:
                required: false
# Protect reprepro database using concurrency
concurrency: reprepro
jobs:
    reprepro:
        name: Run reprepro
        environment: packages.element.io
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: ${{ inputs.artifact-name }}
                  path: dist

            - name: Load GPG key
              if: inputs.deploy-mode
              uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5
              with:
                  gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
                  passphrase: ${{ secrets.GPG_PASSPHRASE }}
                  fingerprint: 75741890063E5E9A46135D01C2850B265AC085BD

            - name: Run reprepro
              if: inputs.deploy-mode
              run: |
                  # Install reprepro
                  sudo apt-get install -y reprepro
                  
                  # Fetch reprepro database
                  aws s3 cp --recursive s3://$R2_BUCKET debian/db/ --endpoint-url $R2_URL --region auto
                  
                  grep Codename debian/conf/distributions | sed -n 's/Codename: //p' | while read -r target ; do
                      reprepro -b debian includedeb "$target" ./dist/*.deb
                  done
                  
                  # Store reprepro database
                  aws s3 cp --recursive debian/db/ s3://$R2_BUCKET --endpoint-url $R2_URL --region auto
              env:
                  R2_BUCKET: packages-element-io-db
                  AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_TOKEN }}
                  R2_URL: ${{ secrets.CF_R2_S3_API }}

            - name: Check repository works
              run: |
                  sudo wget -O /usr/share/keyrings/element-io-archive-keyring.gpg https://packages.element.io/debian/element-io-archive-keyring.gpg
                  echo "deb [signed-by=/usr/share/keyrings/element-io-archive-keyring.gpg] file://$(pwd)/packages.element.io/debian/ default main" | sudo tee /etc/apt/sources.list.d/element-io.list
                  sudo apt update
                  apt-cache-policy element-*

            - name: Deploy debian repo
              run: |
                  aws s3 cp --recursive packages.element.io/debian/ s3://$R2_BUCKET/debian --endpoint-url $R2_URL --region auto
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_TOKEN }}
                  R2_URL: ${{ secrets.CF_R2_S3_API }}
                  # XXX: UPDATE THIS BEFORE WHEN GOING LIVE
                  R2_BUCKET: "packages-element-io-test"
